class Solution {
    public int minFallingPathSum(int[][] a) {
        int n = a.length;
        int dp[][] = new int[n][n];

        for(int j = 0;j<n;j++)dp[n-1][j] = a[n-1][j];

        for(int i = n-2;i>=0;i--){
            int idx = -1;
            int min1 = Integer.MAX_VALUE;
            int min2 = Integer.MAX_VALUE;

            for(int j = 0;j<n;j++){
                if(dp[i+1][j] < min1){
                    min2 = min1;
                    min1 = dp[i+1][j];
                    idx = j;
                }
                else if(dp[i+1][j] < min2)min2 = dp[i+1][j];
            }

            for(int j = 0;j<n;j++){
                if(idx == j)dp[i][j] = a[i][j] + min2;
                else dp[i][j] = a[i][j] + min1;
            }
        }
        int ans = Integer.MAX_VALUE;

        for(int j = 0;j<n;j++){
            ans = Math.min(ans, dp[0][j]);
        }

        return ans;

    }
}
